{"ast":null,"code":"var _jsxFileName = \"/Users/gopalkbks/Desktop/work/programming/udemy/Academind/mern/frontend/src/shared/components/FormElements/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from 'react';\nimport './Input.css';\nimport { validate } from '../util/validators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  value: '',\n  isValid: false,\n  isTouched: false\n};\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    case 'TOUCH':\n      {\n        return { ...state,\n          isTouched: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputReducer, initialState);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  useEffect(() => {}, []);\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 4\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    value: inputState.value,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 4\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), element, !inputState.isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Input, \"jLwKxmIUdYgKK/4w1ME6HslpZ2k=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/gopalkbks/Desktop/work/programming/udemy/Academind/mern/frontend/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","useEffect","validate","initialState","value","isValid","isTouched","inputReducer","state","action","type","val","validators","Input","props","inputState","dispatch","changeHandler","event","target","touchHandler","element","id","placeholder","rows","label","errorText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AACA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,OAAO,EAAE,KAAtB;AAA6BC,EAAAA,SAAS,EAAE;AAAxC,CAArB;;AACA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,QAAL;AACC,aAAO,EACN,GAAGF,KADG;AAENJ,QAAAA,KAAK,EAAEK,MAAM,CAACE,GAFR;AAGNN,QAAAA,OAAO,EAAEH,QAAQ,CAACO,MAAM,CAACE,GAAR,EAAaF,MAAM,CAACG,UAApB;AAHX,OAAP;;AAKD,SAAK,OAAL;AAAc;AACb,eAAO,EACN,GAAGJ,KADG;AAENF,UAAAA,SAAS,EAAE;AAFL,SAAP;AAIA;;AACD;AACC,aAAOE,KAAP;AAdF;AAgBA,CAjBD;;AAkBA,MAAMK,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBhB,UAAU,CAACO,YAAD,EAAeJ,YAAf,CAAzC;;AAEA,QAAMc,aAAa,GAAIC,KAAD,IAAW;AAChCF,IAAAA,QAAQ,CAAC;AACRN,MAAAA,IAAI,EAAE,QADE;AAERC,MAAAA,GAAG,EAAEO,KAAK,CAACC,MAAN,CAAaf,KAFV;AAGRQ,MAAAA,UAAU,EAAEE,KAAK,CAACF;AAHV,KAAD,CAAR;AAKA,GAND;;AAOAX,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;;AAEA,QAAMmB,YAAY,GAAG,MAAM;AAC1BJ,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,GAFD;;AAGA,QAAMW,OAAO,GACZP,KAAK,CAACO,OAAN,KAAkB,OAAlB,gBACC;AACC,IAAA,EAAE,EAAEP,KAAK,CAACQ,EADX;AAEC,IAAA,IAAI,EAAER,KAAK,CAACJ,IAFb;AAGC,IAAA,WAAW,EAAEI,KAAK,CAACS,WAHpB;AAIC,IAAA,QAAQ,EAAEN,aAJX;AAKC,IAAA,MAAM,EAAEG,YALT;AAMC,IAAA,KAAK,EAAEL,UAAU,CAACX;AANnB;AAAA;AAAA;AAAA;AAAA,UADD,gBAUC;AACC,IAAA,EAAE,EAAEU,KAAK,CAACQ,EADX;AAEC,IAAA,IAAI,EAAER,KAAK,CAACU,IAAN,IAAc,CAFrB;AAGC,IAAA,KAAK,EAAET,UAAU,CAACX,KAHnB;AAIC,IAAA,QAAQ,EAAEa,aAJX;AAKC,IAAA,MAAM,EAAEG,YALT;AAMC,IAAA,KAAK,EAAEL,UAAU,CAACX;AANnB;AAAA;AAAA;AAAA;AAAA,UAXF;AAoBA,sBACC;AACC,IAAA,SAAS,EAAG,gBACX,CAACW,UAAU,CAACV,OAAZ,IAAuBU,UAAU,CAACT,SAAlC,IAA+C,uBAC/C,EAHF;AAAA,4BAKC;AAAO,MAAA,OAAO,EAAEQ,KAAK,CAACQ,EAAtB;AAAA,gBAA2BR,KAAK,CAACW;AAAjC;AAAA;AAAA;AAAA;AAAA,YALD,EAMEJ,OANF,EAOE,CAACN,UAAU,CAACV,OAAZ,iBAAuB;AAAA,gBAAIS,KAAK,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,YAPzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CA9CD;;GAAMb,K;;KAAAA,K;AAgDN,eAAeA,KAAf","sourcesContent":["import React, { useReducer, useEffect } from 'react';\nimport './Input.css';\nimport { validate } from '../util/validators';\nconst initialState = { value: '', isValid: false, isTouched: false };\nconst inputReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'CHANGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tvalue: action.val,\n\t\t\t\tisValid: validate(action.val, action.validators),\n\t\t\t};\n\t\tcase 'TOUCH': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisTouched: true,\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\nconst Input = (props) => {\n\tconst [inputState, dispatch] = useReducer(inputReducer, initialState);\n\n\tconst changeHandler = (event) => {\n\t\tdispatch({\n\t\t\ttype: 'CHANGE',\n\t\t\tval: event.target.value,\n\t\t\tvalidators: props.validators,\n\t\t});\n\t};\n\tuseEffect(() => {}, []);\n\n\tconst touchHandler = () => {\n\t\tdispatch({ type: 'TOUCH' });\n\t};\n\tconst element =\n\t\tprops.element === 'input' ? (\n\t\t\t<input\n\t\t\t\tid={props.id}\n\t\t\t\ttype={props.type}\n\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\tonChange={changeHandler}\n\t\t\t\tonBlur={touchHandler}\n\t\t\t\tvalue={inputState.value}\n\t\t\t/>\n\t\t) : (\n\t\t\t<textarea\n\t\t\t\tid={props.id}\n\t\t\t\trows={props.rows || 3}\n\t\t\t\tvalue={inputState.value}\n\t\t\t\tonChange={changeHandler}\n\t\t\t\tonBlur={touchHandler}\n\t\t\t\tvalue={inputState.value}\n\t\t\t/>\n\t\t);\n\treturn (\n\t\t<div\n\t\t\tclassName={`form-control ${\n\t\t\t\t!inputState.isValid && inputState.isTouched && 'form-control--invalid'\n\t\t\t}`}\n\t\t>\n\t\t\t<label htmlFor={props.id}>{props.label}</label>\n\t\t\t{element}\n\t\t\t{!inputState.isValid && <p>{props.errorText}</p>}\n\t\t</div>\n\t);\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}