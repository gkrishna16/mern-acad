{"ast":null,"code":"var _jsxFileName = \"/Users/gopalkbks/Desktop/work/programming/udemy/Academind/mern/frontend/src/places/pages/NewPlace.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport './PlaceForm.css';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport Button from '../../shared/components/FormElements/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  _s();\n\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      inputId: id,\n      value: value,\n      isValid: isValid\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"place-form\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"title\",\n        element: \"input\",\n        label: \"Title : \",\n        validators: [VALIDATOR_REQUIRE()],\n        onInput: inputHandler,\n        errorText: \"Please enter a valid title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"description\",\n        element: \"textarea\",\n        label: \"Description : \",\n        validators: [VALIDATOR_MINLENGTH(5)],\n        onInput: inputHandler,\n        errorText: \"Please enter at least 5 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n\n_s(NewPlace, \"M9mdtYwHHssOm89jr2B3nejCjsc=\");\n\n_c = NewPlace;\nexport default NewPlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"sources":["/Users/gopalkbks/Desktop/work/programming/udemy/Academind/mern/frontend/src/places/pages/NewPlace.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Button","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","NewPlace","formState","dispatch","title","description","inputHandler","id"],"mappings":"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","sourcesContent":["import React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport './PlaceForm.css';\nimport {\n\tVALIDATOR_MINLENGTH,\n\tVALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport Button from '../../shared/components/FormElements/Button';\n\nconst formReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'INPUT_CHANGE':\n\t\t\tlet formIsValid = true;\n\t\t\tfor (const inputId in state.inputs) {\n\t\t\t\tif (inputId === action.inputId) {\n\t\t\t\t\tformIsValid = formIsValid && action.isValid;\n\t\t\t\t} else {\n\t\t\t\t\tformIsValid = formIsValid && state.inputs[inputId].isValid;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinputs: {\n\t\t\t\t\t...state.inputs,\n\t\t\t\t\t[action.inputId]: { value: action.value, isValid: action.isValid },\n\t\t\t\t},\n\t\t\t\tisValid: formIsValid,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst NewPlace = () => {\n\tconst [formState, dispatch] = useReducer(formReducer, {\n\t\tinputs: {\n\t\t\ttitle: { value: '', isValid: false },\n\t\t\tdescription: { value: '', isValid: false },\n\t\t},\n\t\tisValid: false,\n\t});\n\tconst inputHandler = useCallback((id, value, isValid) => {\n\t\tdispatch({\n\t\t\ttype: 'INPUT_CHANGE',\n\t\t\tinputId: id,\n\t\t\tvalue: value,\n\t\t\tisValid: isValid,\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<form className=\"place-form\">\n\t\t\t\t<Input\n\t\t\t\t\tid=\"title\"\n\t\t\t\t\telement=\"input\"\n\t\t\t\t\tlabel=\"Title : \"\n\t\t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\n\t\t\t\t\tonInput={inputHandler}\n\t\t\t\t\terrorText=\"Please enter a valid title\"\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\tid=\"description\"\n\t\t\t\t\telement=\"textarea\"\n\t\t\t\t\tlabel=\"Description : \"\n\t\t\t\t\tvalidators={[VALIDATOR_MINLENGTH(5)]}\n\t\t\t\t\tonInput={inputHandler}\n\t\t\t\t\terrorText=\"Please enter at least 5 characters\"\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\" disabled={!formState.isValid}>\n\t\t\t\t\tSUBMIT\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default NewPlace;\n"]},"metadata":{},"sourceType":"module"}