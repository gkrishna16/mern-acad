{"ast":null,"code":"var _jsxFileName = \"/Users/gopalkbks/Desktop/work/programming/udemy/Academind/mern/frontend/src/user/pages/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './Auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"authentication\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: authSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"email\",\n        type: \"email\",\n        label: \"E-Mail\",\n        validators: [VALIDATOR_EMAIL()],\n        errorText: \"Please enter a valid email address.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"password\",\n        type: \"password\",\n        label: \"Password\",\n        validators: [VALIDATOR_MINLENGTH(5)],\n        errorText: \"Please enter a valid password, at least 5 characters.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        onClick: switchModeHandler,\n        children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      inverse: true,\n      onClick: switchModeHandler,\n      children: \"SWITCH TO \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Auth, \"oML3rFpVdmlUX7afTUpVx764IIM=\", false, function () {\n  return [useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/gopalkbks/Desktop/work/programming/udemy/Academind/mern/frontend/src/user/pages/Auth.js"],"names":["React","useState","Card","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","useForm","Auth","isLoginMode","setIsLoginMode","formState","inputHandler","email","value","isValid","password","switchModeHandler","prevMode","authSubmitHandler","event","preventDefault","console","log","inputs"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,SACCC,eADD,EAECC,mBAFD,QAGO,8BAHP;AAIA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BL,OAAO,CACxC;AACCM,IAAAA,KAAK,EAAE;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AAFH,KADR;AAKCC,IAAAA,QAAQ,EAAE;AACTF,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAE;AAFA;AALX,GADwC,EAWxC,KAXwC,CAAzC;;AAcA,QAAME,iBAAiB,GAAG,MAAM;AAC/BP,IAAAA,cAAc,CAAEQ,QAAD,IAAc,CAACA,QAAhB,CAAd;AACA,GAFD;;AAIA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAS,CAACa,MAAtB;AACA,GAHD;;AAKA,sBACC,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAM,MAAA,QAAQ,EAAEL,iBAAhB;AAAA,8BACC,QAAC,KAAD;AACC,QAAA,OAAO,EAAC,OADT;AAEC,QAAA,EAAE,EAAC,OAFJ;AAGC,QAAA,IAAI,EAAC,OAHN;AAIC,QAAA,KAAK,EAAC,QAJP;AAKC,QAAA,UAAU,EAAE,CAACd,eAAe,EAAhB,CALb;AAMC,QAAA,SAAS,EAAC,qCANX;AAOC,QAAA,OAAO,EAAEO;AAPV;AAAA;AAAA;AAAA;AAAA,cADD,eAUC,QAAC,KAAD;AACC,QAAA,OAAO,EAAC,OADT;AAEC,QAAA,EAAE,EAAC,UAFJ;AAGC,QAAA,IAAI,EAAC,UAHN;AAIC,QAAA,KAAK,EAAC,UAJP;AAKC,QAAA,UAAU,EAAE,CAACN,mBAAmB,CAAC,CAAD,CAApB,CALb;AAMC,QAAA,SAAS,EAAC,uDANX;AAOC,QAAA,OAAO,EAAEM;AAPV;AAAA;AAAA;AAAA;AAAA,cAVD,eAmBC,QAAC,MAAD;AACC,QAAA,IAAI,EAAC,QADN;AAEC,QAAA,QAAQ,EAAE,CAACD,SAAS,CAACI,OAFtB;AAGC,QAAA,OAAO,EAAEE,iBAHV;AAAA,kBAKER,WAAW,GAAG,OAAH,GAAa;AAL1B;AAAA;AAAA;AAAA;AAAA,cAnBD;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eA8BC,QAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAEQ,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAoCA,CA7DD;;GAAMT,I;UAE6BD,O;;;KAF7BC,I;AA+DN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {\n\tVALIDATOR_EMAIL,\n\tVALIDATOR_MINLENGTH,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './Auth.css';\n\nconst Auth = () => {\n\tconst [isLoginMode, setIsLoginMode] = useState(true);\n\tconst [formState, inputHandler] = useForm(\n\t\t{\n\t\t\temail: {\n\t\t\t\tvalue: '',\n\t\t\t\tisValid: false,\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\tvalue: '',\n\t\t\t\tisValid: false,\n\t\t\t},\n\t\t},\n\t\tfalse,\n\t);\n\n\tconst switchModeHandler = () => {\n\t\tsetIsLoginMode((prevMode) => !prevMode);\n\t};\n\n\tconst authSubmitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log(formState.inputs);\n\t};\n\n\treturn (\n\t\t<Card className=\"authentication\">\n\t\t\t<h2>Login Required</h2>\n\t\t\t<hr />\n\t\t\t<form onSubmit={authSubmitHandler}>\n\t\t\t\t<Input\n\t\t\t\t\telement=\"input\"\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tlabel=\"E-Mail\"\n\t\t\t\t\tvalidators={[VALIDATOR_EMAIL()]}\n\t\t\t\t\terrorText=\"Please enter a valid email address.\"\n\t\t\t\t\tonInput={inputHandler}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\telement=\"input\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\tvalidators={[VALIDATOR_MINLENGTH(5)]}\n\t\t\t\t\terrorText=\"Please enter a valid password, at least 5 characters.\"\n\t\t\t\t\tonInput={inputHandler}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tdisabled={!formState.isValid}\n\t\t\t\t\tonClick={switchModeHandler}\n\t\t\t\t>\n\t\t\t\t\t{isLoginMode ? 'LOGIN' : 'SIGNUP'}\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t\t<Button inverse onClick={switchModeHandler}>\n\t\t\t\tSWITCH TO {}\n\t\t\t</Button>\n\t\t</Card>\n\t);\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}