{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst inputHandler = useCallback((id, value, isValid) => {\n  dispatch({\n    type: 'INPUT_CHANGE',\n    value: value,\n    isValid: isValid,\n    inputId: id\n  });\n}, []);\nexport const useForm = (initialInputs, initialFormValidity) => {\n  _s();\n\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n  return;\n};\n\n_s(useForm, \"HgacWBVCGiZV4y/S9kzrKxOsiG4=\");","map":{"version":3,"sources":["/Users/gopalkbks/Desktop/work/programming/udemy/Academind/mern/frontend/src/shared/hooks/form-hook.js"],"names":["React","useCallback","useReducer","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","inputHandler","id","dispatch","useForm","initialInputs","initialFormValidity","formState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,cAAL;AACC,UAAIC,WAAW,GAAG,IAAlB;;AACA,WAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,MAA5B,EAAoC;AACnC,YAAID,OAAO,KAAKH,MAAM,CAACG,OAAvB,EAAgC;AAC/BD,UAAAA,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAApC;AACA,SAFD,MAEO;AACNH,UAAAA,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD;AACA;AACD;;AACD,aAAO,EACN,GAAGN,KADG;AAENK,QAAAA,MAAM,EAAE,EACP,GAAGL,KAAK,CAACK,MADF;AAEP,WAACJ,MAAM,CAACG,OAAR,GAAkB;AAAEG,YAAAA,KAAK,EAAEN,MAAM,CAACM,KAAhB;AAAuBD,YAAAA,OAAO,EAAEL,MAAM,CAACK;AAAvC;AAFX,SAFF;AAMNA,QAAAA,OAAO,EAAEH;AANH,OAAP;;AAQD;AACC,aAAOH,KAAP;AAnBF;AAqBA,CAtBD;;AAuBA,MAAMQ,YAAY,GAAGX,WAAW,CAAC,CAACY,EAAD,EAAKF,KAAL,EAAYD,OAAZ,KAAwB;AACxDI,EAAAA,QAAQ,CAAC;AACRR,IAAAA,IAAI,EAAE,cADE;AAERK,IAAAA,KAAK,EAAEA,KAFC;AAGRD,IAAAA,OAAO,EAAEA,OAHD;AAIRF,IAAAA,OAAO,EAAEK;AAJD,GAAD,CAAR;AAMA,CAP+B,EAO7B,EAP6B,CAAhC;AASA,OAAO,MAAME,OAAO,GAAG,CAACC,aAAD,EAAgBC,mBAAhB,KAAwC;AAAA;;AAC9D,QAAM,CAACC,SAAD,EAAYJ,QAAZ,IAAwBZ,UAAU,CAACC,WAAD,EAAc;AACrDM,IAAAA,MAAM,EAAEO,aAD6C;AAErDN,IAAAA,OAAO,EAAEO;AAF4C,GAAd,CAAxC;AAKA;AACA,CAPM;;GAAMF,O","sourcesContent":["import React, { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'INPUT_CHANGE':\n\t\t\tlet formIsValid = true;\n\t\t\tfor (const inputId in state.inputs) {\n\t\t\t\tif (inputId === action.inputId) {\n\t\t\t\t\tformIsValid = formIsValid && action.isValid;\n\t\t\t\t} else {\n\t\t\t\t\tformIsValid = formIsValid && state.inputs[inputId].isValid;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinputs: {\n\t\t\t\t\t...state.inputs,\n\t\t\t\t\t[action.inputId]: { value: action.value, isValid: action.isValid },\n\t\t\t\t},\n\t\t\t\tisValid: formIsValid,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\nconst inputHandler = useCallback((id, value, isValid) => {\n\tdispatch({\n\t\ttype: 'INPUT_CHANGE',\n\t\tvalue: value,\n\t\tisValid: isValid,\n\t\tinputId: id,\n\t});\n}, []);\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n\tconst [formState, dispatch] = useReducer(formReducer, {\n\t\tinputs: initialInputs,\n\t\tisValid: initialFormValidity,\n\t});\n\n\treturn;\n};\n"]},"metadata":{},"sourceType":"module"}