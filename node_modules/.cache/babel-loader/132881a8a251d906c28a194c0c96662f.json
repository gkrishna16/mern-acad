{"ast":null,"code":"var _jsxFileName = \"/Users/gopalkbks/Desktop/work/programming/udemy/Academind/mern/frontend/src/shared/components/FormElements/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from 'react';\nimport './Input.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  value: '',\n  isValid: false\n};\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputReducer, initialState);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value\n    });\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 4\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 4\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), element]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Input, \"WTVy3W/BBpinEIavl2C9EMTzZQQ=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/gopalkbks/Desktop/work/programming/udemy/Academind/mern/frontend/src/shared/components/FormElements/Input.js"],"names":["React","useState","useReducer","initialState","value","isValid","inputReducer","state","action","type","val","Input","props","inputState","dispatch","changeHandler","event","target","element","id","placeholder","rows","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAO,aAAP;;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,OAAO,EAAE;AAAtB,CAArB;;AACA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,QAAL;AACC,aAAO,EACN,GAAGF,KADG;AAENH,QAAAA,KAAK,EAAEI,MAAM,CAACE,GAFR;AAGNL,QAAAA,OAAO,EAAE;AAHH,OAAP;;AAKD;AACC,aAAOE,KAAP;AARF;AAUA,CAXD;;AAaA,MAAMI,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBZ,UAAU,CAACI,YAAD,EAAeH,YAAf,CAAzC;;AAEA,QAAMY,aAAa,GAAIC,KAAD,IAAW;AAChCF,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,GAAG,EAAEM,KAAK,CAACC,MAAN,CAAab;AAApC,KAAD,CAAR;AACA,GAFD;;AAIA,QAAMc,OAAO,GACZN,KAAK,CAACM,OAAN,KAAkB,OAAlB,gBACC;AACC,IAAA,EAAE,EAAEN,KAAK,CAACO,EADX;AAEC,IAAA,IAAI,EAAEP,KAAK,CAACH,IAFb;AAGC,IAAA,WAAW,EAAEG,KAAK,CAACQ,WAHpB;AAIC,IAAA,QAAQ,EAAEL;AAJX;AAAA;AAAA;AAAA;AAAA,UADD,gBAQC;AAAU,IAAA,EAAE,EAAEH,KAAK,CAACO,EAApB;AAAwB,IAAA,IAAI,EAAEP,KAAK,CAACS,IAAN,IAAc,CAA5C;AAA+C,IAAA,QAAQ,EAAEN;AAAzD;AAAA;AAAA;AAAA;AAAA,UATF;AAYA,sBACC;AAAK,IAAA,SAAS,EAAG,cAAjB;AAAA,4BACC;AAAO,MAAA,OAAO,EAAEH,KAAK,CAACO,EAAtB;AAAA,gBAA2BP,KAAK,CAACU;AAAjC;AAAA;AAAA;AAAA;AAAA,YADD,EAEEJ,OAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CAzBD;;GAAMP,K;;KAAAA,K;AA2BN,eAAeA,KAAf","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport './Input.css';\n\nconst initialState = { value: '', isValid: false };\nconst inputReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'CHANGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tvalue: action.val,\n\t\t\t\tisValid: true,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst Input = (props) => {\n\tconst [inputState, dispatch] = useReducer(inputReducer, initialState);\n\n\tconst changeHandler = (event) => {\n\t\tdispatch({ type: 'CHANGE', val: event.target.value });\n\t};\n\n\tconst element =\n\t\tprops.element === 'input' ? (\n\t\t\t<input\n\t\t\t\tid={props.id}\n\t\t\t\ttype={props.type}\n\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\tonChange={changeHandler}\n\t\t\t/>\n\t\t) : (\n\t\t\t<textarea id={props.id} rows={props.rows || 3} onChange={changeHandler} />\n\t\t);\n\n\treturn (\n\t\t<div className={`form-control`}>\n\t\t\t<label htmlFor={props.id}>{props.label}</label>\n\t\t\t{element}\n\t\t</div>\n\t);\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}