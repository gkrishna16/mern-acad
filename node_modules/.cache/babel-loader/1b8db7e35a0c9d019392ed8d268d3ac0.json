{"ast":null,"code":"var _jsxFileName = \"/Users/gopalkbks/Desktop/work/programming/udemy/Academind/mern/frontend/src/places/pages/NewPlace.js\",\n    _s = $RefreshSig$();\n\n// import React, { useCallback, useReducer } from 'react';\n// import Input from '../../shared/components/FormElements/Input';\n// import Button from '../../shared/components/FormElements/Button';\n// import {\n// \tVALIDATOR_MINLENGTH,\n// \tVALIDATOR_REQUIRE,\n// } from '../../shared/components/util/validators';\n// import './NewPlace.css';\n// const initialState = {\n// \tinputs: {\n// \t\ttitle: {\n// \t\t\tvalue: '',\n// \t\t\tisValid: false,\n// \t\t},\n// \t\tdescription: {\n// \t\t\tvalue: '',\n// \t\t\tisValid: false,\n// \t\t},\n// \t},\n// };\n// const formReducer = (state, action) => {\n// \tswitch (action.type) {\n// \t\tcase 'INPUT_CHANGE':\n// \t\t\tlet formIsValid = true;\n// \t\t\tfor (const inputId in state.inputs) {\n// \t\t\t\tif (inputId === action.inputId) {\n// \t\t\t\t\tformIsValid = formIsValid && action.formIsValid;\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\treturn {};\n// \t\tdefault:\n// \t\t\treturn state;\n// \t}\n// };\n// const NewPlace = () => {\n// \tuseReducer(formReducer, initialState);\n// \tconst inputHandler = (id) => {\n// \t\tdispatchEvent({});\n// \t};\n// \treturn (\n// \t\t<form className=\"place-form\">\n// \t\t\t<Input\n// \t\t\t\tid=\"title\"\n// \t\t\t\telement=\"input\"\n// \t\t\t\ttype=\"text\"\n// \t\t\t\tlabel=\"Title\"\n// \t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\n// \t\t\t\terrorText=\"Please enter a valid title.\"\n// \t\t\t\tonInput={inputHandler}\n// \t\t\t/>\n// \t\t\t<Input\n// \t\t\t\tid=\"description\"\n// \t\t\t\telement=\"textarea\"\n// \t\t\t\ttype=\"text\"\n// \t\t\t\tlabel=\"Description\"\n// \t\t\t\tvalidators={[VALIDATOR_MINLENGTH(5)]}\n// \t\t\t\terrorText=\"Please enter a valid description (at least 5 characters).\"\n// \t\t\t\tonInput={inputHandler}\n// \t\t\t/>\n// \t\t</form>\n// \t);\n// };\n// export default NewPlace;\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport './NewPlace.css';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/components/util/validators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  inputs: {\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    }\n  },\n  isValid: false\n};\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  _s();\n\n  const [formState, dispatch] = useReducer(formReducer, initialState);\n  const titleInputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value\n    });\n  }, []);\n  const descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"place-form\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"title\",\n        element: \"input\",\n        type: \"text\",\n        label: \"Title\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Please enter a valid title.\",\n        onInput: titleInputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"description\",\n        element: \"textarea\",\n        type: \"text\",\n        label: \"Description\",\n        validators: [VALIDATOR_MINLENGTH(5)],\n        errorText: \"Please enter a valid description.\",\n        onInput: descriptionInputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 3\n  }, this);\n};\n\n_s(NewPlace, \"i1+cG37W4959n9PoY6p2NmfwEh4=\");\n\n_c = NewPlace;\nexport default NewPlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"sources":["/Users/gopalkbks/Desktop/work/programming/udemy/Academind/mern/frontend/src/places/pages/NewPlace.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","initialState","inputs","title","value","isValid","description","formReducer","state","action","type","formIsValid","inputId","NewPlace","formState","dispatch","titleInputHandler","id","descriptionInputHandler"],"mappings":"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","sourcesContent":["// import React, { useCallback, useReducer } from 'react';\n// import Input from '../../shared/components/FormElements/Input';\n// import Button from '../../shared/components/FormElements/Button';\n// import {\n// \tVALIDATOR_MINLENGTH,\n// \tVALIDATOR_REQUIRE,\n// } from '../../shared/components/util/validators';\n// import './NewPlace.css';\n\n// const initialState = {\n// \tinputs: {\n// \t\ttitle: {\n// \t\t\tvalue: '',\n// \t\t\tisValid: false,\n// \t\t},\n// \t\tdescription: {\n// \t\t\tvalue: '',\n// \t\t\tisValid: false,\n// \t\t},\n// \t},\n// };\n// const formReducer = (state, action) => {\n// \tswitch (action.type) {\n// \t\tcase 'INPUT_CHANGE':\n// \t\t\tlet formIsValid = true;\n// \t\t\tfor (const inputId in state.inputs) {\n// \t\t\t\tif (inputId === action.inputId) {\n// \t\t\t\t\tformIsValid = formIsValid && action.formIsValid;\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\treturn {};\n// \t\tdefault:\n// \t\t\treturn state;\n// \t}\n// };\n\n// const NewPlace = () => {\n// \tuseReducer(formReducer, initialState);\n\n// \tconst inputHandler = (id) => {\n// \t\tdispatchEvent({});\n// \t};\n// \treturn (\n// \t\t<form className=\"place-form\">\n// \t\t\t<Input\n// \t\t\t\tid=\"title\"\n// \t\t\t\telement=\"input\"\n// \t\t\t\ttype=\"text\"\n// \t\t\t\tlabel=\"Title\"\n// \t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\n// \t\t\t\terrorText=\"Please enter a valid title.\"\n// \t\t\t\tonInput={inputHandler}\n// \t\t\t/>\n// \t\t\t<Input\n// \t\t\t\tid=\"description\"\n// \t\t\t\telement=\"textarea\"\n// \t\t\t\ttype=\"text\"\n// \t\t\t\tlabel=\"Description\"\n// \t\t\t\tvalidators={[VALIDATOR_MINLENGTH(5)]}\n// \t\t\t\terrorText=\"Please enter a valid description (at least 5 characters).\"\n// \t\t\t\tonInput={inputHandler}\n// \t\t\t/>\n// \t\t</form>\n// \t);\n// };\n\n// export default NewPlace;\n\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport './NewPlace.css';\nimport {\n\tVALIDATOR_MINLENGTH,\n\tVALIDATOR_REQUIRE,\n} from '../../shared/components/util/validators';\nconst initialState = {\n\tinputs: {\n\t\ttitle: {\n\t\t\tvalue: '',\n\t\t\tisValid: false,\n\t\t},\n\t\tdescription: {\n\t\t\tvalue: '',\n\t\t\tisValid: false,\n\t\t},\n\t},\n\tisValid: false,\n};\nconst formReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'INPUT_CHANGE':\n\t\t\tlet formIsValid = true;\n\t\t\tfor (const inputId in state.inputs) {\n\t\t\t\tif (inputId === action.inputId) {\n\t\t\t\t\tformIsValid = formIsValid && action.isValid;\n\t\t\t\t} else {\n\t\t\t\t\tformIsValid = formIsValid && state.inputs[inputId].isValid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinputs: {\n\t\t\t\t\t...state.inputs,\n\t\t\t\t\t[action.inputId]: { value: action.value, isValid: action.isValid },\n\t\t\t\t},\n\t\t\t\tisValid: formIsValid,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst NewPlace = () => {\n\tconst [formState, dispatch] = useReducer(formReducer, initialState);\n\n\tconst titleInputHandler = useCallback((id, value, isValid) => {\n\t\tdispatch({\n\t\t\ttype: 'INPUT_CHANGE',\n\t\t\tvalue: value,\n\t\t});\n\t}, []);\n\tconst descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<form className=\"place-form\">\n\t\t\t\t<Input\n\t\t\t\t\tid=\"title\"\n\t\t\t\t\telement=\"input\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tlabel=\"Title\"\n\t\t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\n\t\t\t\t\terrorText=\"Please enter a valid title.\"\n\t\t\t\t\tonInput={titleInputHandler}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\tid=\"description\"\n\t\t\t\t\telement=\"textarea\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\tvalidators={[VALIDATOR_MINLENGTH(5)]}\n\t\t\t\t\terrorText=\"Please enter a valid description.\"\n\t\t\t\t\tonInput={descriptionInputHandler}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default NewPlace;\n"]},"metadata":{},"sourceType":"module"}