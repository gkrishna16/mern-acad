{"ast":null,"code":"var _jsxFileName = \"/Users/gopalkbks/Desktop/work/programming/udemy/Academind/mern/frontend/src/shared/components/FormElements/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from 'react';\nimport './Input.css';\nimport { validate } from '../../util/validators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  _s();\n\n  const [touched, setTouched] = useState(false);\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: '',\n    isValid: false\n  });\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    setTouched(false);\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 4\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    onBlur: touchHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 4\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control ${!inputState.isValid && 'form-control--invalid'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), element, !inputState.isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Input, \"eV3pUI1HAN3S+IRM9BBW6F86IPk=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/gopalkbks/Desktop/work/programming/udemy/Academind/mern/frontend/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","useState","validate","inputReducer","state","action","type","value","val","isValid","validators","Input","props","touched","setTouched","inputState","dispatch","changeHandler","event","target","touchHandler","element","id","placeholder","rows","label","errorText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,QAAL;AACC,aAAO,EACN,GAAGF,KADG;AAENG,QAAAA,KAAK,EAAEF,MAAM,CAACG,GAFR;AAGNC,QAAAA,OAAO,EAAEP,QAAQ,CAACG,MAAM,CAACG,GAAR,EAAaH,MAAM,CAACK,UAApB;AAHX,OAAP;;AAMD;AACC,aAAON,KAAP;AATF;AAWA,CAZD;;AAaA,MAAMO,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,UAAD,EAAaC,QAAb,IAAyBhB,UAAU,CAACG,YAAD,EAAe;AACvDI,IAAAA,KAAK,EAAE,EADgD;AAEvDE,IAAAA,OAAO,EAAE;AAF8C,GAAf,CAAzC;;AAKA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAChCF,IAAAA,QAAQ,CAAC;AACRV,MAAAA,IAAI,EAAE,QADE;AAERE,MAAAA,GAAG,EAAEU,KAAK,CAACC,MAAN,CAAaZ,KAFV;AAGRG,MAAAA,UAAU,EAAEE,KAAK,CAACF;AAHV,KAAD,CAAR;AAKA,GAND;;AAQA,QAAMU,YAAY,GAAG,MAAM;AAC1BN,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,GAFD;;AAIA,QAAMO,OAAO,GACZT,KAAK,CAACS,OAAN,KAAkB,OAAlB,gBACC;AACC,IAAA,EAAE,EAAET,KAAK,CAACU,EADX;AAEC,IAAA,IAAI,EAAEV,KAAK,CAACN,IAFb;AAGC,IAAA,WAAW,EAAEM,KAAK,CAACW,WAHpB;AAIC,IAAA,QAAQ,EAAEN,aAJX;AAKC,IAAA,MAAM,EAAEG;AALT;AAAA;AAAA;AAAA;AAAA,UADD,gBASC;AACC,IAAA,EAAE,EAAER,KAAK,CAACU,EADX;AAEC,IAAA,IAAI,EAAEV,KAAK,CAACY,IAAN,IAAc,CAFrB;AAGC,IAAA,QAAQ,EAAEP,aAHX;AAIC,IAAA,MAAM,EAAEG;AAJT;AAAA;AAAA;AAAA;AAAA,UAVF;AAiBA,sBACC;AACC,IAAA,SAAS,EAAG,gBACX,CAACL,UAAU,CAACN,OAAZ,IAAuB,uBACvB,EAHF;AAAA,4BAKC;AAAO,MAAA,OAAO,EAAEG,KAAK,CAACU,EAAtB;AAAA,gBAA2BV,KAAK,CAACa;AAAjC;AAAA;AAAA;AAAA;AAAA,YALD,EAMEJ,OANF,EAOE,CAACN,UAAU,CAACN,OAAZ,iBAAuB;AAAA,gBAAIG,KAAK,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,YAPzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CA/CD;;GAAMf,K;;KAAAA,K;AAiDN,eAAeA,KAAf","sourcesContent":["import React, { useReducer, useState } from 'react';\nimport './Input.css';\nimport { validate } from '../../util/validators';\n\nconst inputReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'CHANGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tvalue: action.val,\n\t\t\t\tisValid: validate(action.val, action.validators),\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\nconst Input = (props) => {\n\tconst [touched, setTouched] = useState(false);\n\tconst [inputState, dispatch] = useReducer(inputReducer, {\n\t\tvalue: '',\n\t\tisValid: false,\n\t});\n\n\tconst changeHandler = (event) => {\n\t\tdispatch({\n\t\t\ttype: 'CHANGE',\n\t\t\tval: event.target.value,\n\t\t\tvalidators: props.validators,\n\t\t});\n\t};\n\n\tconst touchHandler = () => {\n\t\tsetTouched(false);\n\t};\n\n\tconst element =\n\t\tprops.element === 'input' ? (\n\t\t\t<input\n\t\t\t\tid={props.id}\n\t\t\t\ttype={props.type}\n\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\tonChange={changeHandler}\n\t\t\t\tonBlur={touchHandler}\n\t\t\t/>\n\t\t) : (\n\t\t\t<textarea\n\t\t\t\tid={props.id}\n\t\t\t\trows={props.rows || 3}\n\t\t\t\tonChange={changeHandler}\n\t\t\t\tonBlur={touchHandler}\n\t\t\t/>\n\t\t);\n\treturn (\n\t\t<div\n\t\t\tclassName={`form-control ${\n\t\t\t\t!inputState.isValid && 'form-control--invalid'\n\t\t\t}`}\n\t\t>\n\t\t\t<label htmlFor={props.id}>{props.label}</label>\n\t\t\t{element}\n\t\t\t{!inputState.isValid && <p>{props.errorText}</p>}\n\t\t</div>\n\t);\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}