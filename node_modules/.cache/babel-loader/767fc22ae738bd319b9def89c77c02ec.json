{"ast":null,"code":"var _jsxFileName = \"/Users/gopalkbks/Desktop/work/programming/udemy/Academind/mern/frontend/src/places/pages/UpdatePlace.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_PLACES = [{\n  id: 'p1',\n  title: 'Empire State Building',\n  description: 'One of the most famous sky scrapers in the world!',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n  address: '20 W 34th St, New York, NY 10001',\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: 'u1'\n}, {\n  id: 'p2',\n  title: 'Empire State Building',\n  description: 'One of the most famous sky scrapers in the world!',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n  address: '20 W 34th St, New York, NY 10001',\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: 'u2'\n}];\n\nconst UpdatePlace = () => {\n  _s();\n\n  const placeId = useParams().placeId;\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    }\n  }, true);\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n\n  const placeUpdateSubmitHandler = e => {\n    e.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  if (!identifiedPlace) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Could not find place !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Title\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid description (min. 5 characters).\",\n      onInput: inputHandler,\n      initialValue: formState.inputs.title.value,\n      initialValid: formState.inputs.title.isValid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      element: \"textarea\",\n      label: \"description\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid description (min. 5 characters).\",\n      onInput: inputHandler,\n      initialValue: formState.inputs.description.value,\n      initialValid: formState.inputs.description.isValid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !formState.isValid,\n      children: \"UPDATE PLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UpdatePlace, \"UT27uF8pXIw/f+PAdn/t1qruH8Q=\", false, function () {\n  return [useParams, useForm];\n});\n\n_c = UpdatePlace;\nexport default UpdatePlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePlace\");","map":{"version":3,"sources":["/Users/gopalkbks/Desktop/work/programming/udemy/Academind/mern/frontend/src/places/pages/UpdatePlace.js"],"names":["React","useParams","Button","Input","VALIDATOR_REQUIRE","useForm","DUMMY_PLACES","id","title","description","imageUrl","address","location","lat","lng","creator","UpdatePlace","placeId","formState","inputHandler","value","isValid","identifiedPlace","find","p","placeUpdateSubmitHandler","e","preventDefault","console","log","inputs"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,OAAT,QAAwB,8BAAxB;;AAEA,MAAMC,YAAY,GAAG,CACpB;AACCC,EAAAA,EAAE,EAAE,IADL;AAECC,EAAAA,KAAK,EAAE,uBAFR;AAGCC,EAAAA,WAAW,EAAE,mDAHd;AAICC,EAAAA,QAAQ,EACP,6HALF;AAMCC,EAAAA,OAAO,EAAE,kCANV;AAOCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,GAAG,EAAE,UADI;AAETC,IAAAA,GAAG,EAAE,CAAC;AAFG,GAPX;AAWCC,EAAAA,OAAO,EAAE;AAXV,CADoB,EAcpB;AACCR,EAAAA,EAAE,EAAE,IADL;AAECC,EAAAA,KAAK,EAAE,uBAFR;AAGCC,EAAAA,WAAW,EAAE,mDAHd;AAICC,EAAAA,QAAQ,EACP,6HALF;AAMCC,EAAAA,OAAO,EAAE,kCANV;AAOCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,GAAG,EAAE,UADI;AAETC,IAAAA,GAAG,EAAE,CAAC;AAFG,GAPX;AAWCC,EAAAA,OAAO,EAAE;AAXV,CAdoB,CAArB;;AA6BA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACzB,QAAMC,OAAO,GAAGhB,SAAS,GAAGgB,OAA5B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,OAAO,CACxC;AACCG,IAAAA,KAAK,EAAE;AAAEY,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,OAAO,EAAE;AAAtB,KADR;AAECZ,IAAAA,WAAW,EAAE;AAAEW,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,OAAO,EAAE;AAAtB;AAFd,GADwC,EAKxC,IALwC,CAAzC;AAOA,QAAMC,eAAe,GAAGhB,YAAY,CAACiB,IAAb,CAAmBC,CAAD,IAAOA,CAAC,CAACjB,EAAF,KAASU,OAAlC,CAAxB;;AAEA,QAAMQ,wBAAwB,GAAIC,CAAD,IAAO;AACvCA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAS,CAACY,MAAtB;AACA,GAHD;;AAKA,MAAI,CAACR,eAAL,EAAsB;AACrB,wBACC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;;AAED,sBACC;AAAA,4BACC,QAAC,KAAD;AACC,MAAA,EAAE,EAAC,OADJ;AAEC,MAAA,OAAO,EAAC,OAFT;AAGC,MAAA,IAAI,EAAC,MAHN;AAIC,MAAA,KAAK,EAAC,OAJP;AAKC,MAAA,UAAU,EAAE,CAAClB,iBAAiB,EAAlB,CALb;AAMC,MAAA,SAAS,EAAC,uDANX;AAOC,MAAA,OAAO,EAAEe,YAPV;AAQC,MAAA,YAAY,EAAED,SAAS,CAACY,MAAV,CAAiBtB,KAAjB,CAAuBY,KARtC;AASC,MAAA,YAAY,EAAEF,SAAS,CAACY,MAAV,CAAiBtB,KAAjB,CAAuBa;AATtC;AAAA;AAAA;AAAA;AAAA,YADD,eAYC,QAAC,KAAD;AACC,MAAA,EAAE,EAAC,aADJ;AAEC,MAAA,OAAO,EAAC,UAFT;AAGC,MAAA,KAAK,EAAC,aAHP;AAIC,MAAA,UAAU,EAAE,CAACjB,iBAAiB,EAAlB,CAJb;AAKC,MAAA,SAAS,EAAC,uDALX;AAMC,MAAA,OAAO,EAAEe,YANV;AAOC,MAAA,YAAY,EAAED,SAAS,CAACY,MAAV,CAAiBrB,WAAjB,CAA6BW,KAP5C;AAQC,MAAA,YAAY,EAAEF,SAAS,CAACY,MAAV,CAAiBrB,WAAjB,CAA6BY;AAR5C;AAAA;AAAA;AAAA;AAAA,YAZD,eAsBC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,CAACH,SAAS,CAACG,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA4BA,CApDD;;GAAML,W;UACWf,S,EACkBI,O;;;KAF7BW,W;AAsDN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\n\nconst DUMMY_PLACES = [\n\t{\n\t\tid: 'p1',\n\t\ttitle: 'Empire State Building',\n\t\tdescription: 'One of the most famous sky scrapers in the world!',\n\t\timageUrl:\n\t\t\t'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n\t\taddress: '20 W 34th St, New York, NY 10001',\n\t\tlocation: {\n\t\t\tlat: 40.7484405,\n\t\t\tlng: -73.9878584,\n\t\t},\n\t\tcreator: 'u1',\n\t},\n\t{\n\t\tid: 'p2',\n\t\ttitle: 'Empire State Building',\n\t\tdescription: 'One of the most famous sky scrapers in the world!',\n\t\timageUrl:\n\t\t\t'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n\t\taddress: '20 W 34th St, New York, NY 10001',\n\t\tlocation: {\n\t\t\tlat: 40.7484405,\n\t\t\tlng: -73.9878584,\n\t\t},\n\t\tcreator: 'u2',\n\t},\n];\n\nconst UpdatePlace = () => {\n\tconst placeId = useParams().placeId;\n\tconst [formState, inputHandler] = useForm(\n\t\t{\n\t\t\ttitle: { value: '', isValid: false },\n\t\t\tdescription: { value: '', isValid: false },\n\t\t},\n\t\ttrue,\n\t);\n\tconst identifiedPlace = DUMMY_PLACES.find((p) => p.id === placeId);\n\n\tconst placeUpdateSubmitHandler = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(formState.inputs);\n\t};\n\n\tif (!identifiedPlace) {\n\t\treturn (\n\t\t\t<div className=\"center\">\n\t\t\t\t<h2>Could not find place !</h2>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<form>\n\t\t\t<Input\n\t\t\t\tid=\"title\"\n\t\t\t\telement=\"input\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tlabel=\"Title\"\n\t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\n\t\t\t\terrorText=\"Please enter a valid description (min. 5 characters).\"\n\t\t\t\tonInput={inputHandler}\n\t\t\t\tinitialValue={formState.inputs.title.value}\n\t\t\t\tinitialValid={formState.inputs.title.isValid}\n\t\t\t/>\n\t\t\t<Input\n\t\t\t\tid=\"description\"\n\t\t\t\telement=\"textarea\"\n\t\t\t\tlabel=\"description\"\n\t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\n\t\t\t\terrorText=\"Please enter a valid description (min. 5 characters).\"\n\t\t\t\tonInput={inputHandler}\n\t\t\t\tinitialValue={formState.inputs.description.value}\n\t\t\t\tinitialValid={formState.inputs.description.isValid}\n\t\t\t/>\n\t\t\t<Button type=\"submit\" disabled={!formState.isValid}>\n\t\t\t\tUPDATE PLACE\n\t\t\t</Button>\n\t\t</form>\n\t);\n};\n\nexport default UpdatePlace;\n"]},"metadata":{},"sourceType":"module"}